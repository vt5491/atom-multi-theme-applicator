// Generated by CoffeeScript 1.10.0
var $, LocalThemeSelectorView, jQuery;

$ = jQuery = require('jquery');

module.exports = LocalThemeSelectorView = (function() {
  LocalThemeSelectorView.prototype.selectorView = null;

  function LocalThemeSelectorView() {
    var form;
    this.selectorView = document.createElement('div');
    this.selectorView.classList.add('local-theme-selector-view');
    form = $('<form/>').attr({
      id: 'input-form'
    }).submit(this.applyLocalTheme.bind(this));
    form.appendTo(this.selectorView);
    $('<input/>').attr({
      type: 'text',
      name: 'theme'
    }).appendTo(form);
    $('<input/>').attr({
      type: 'submit',
      value: 'Apply Local Theme'
    }).appendTo(form);
  }

  LocalThemeSelectorView.prototype.applyLocalTheme = function() {
    return console.log('ThemeSelector.applyLocalTheme: entered');
  };

  LocalThemeSelectorView.prototype.destroy = function() {
    return this.selectorView.remove();
  };

  LocalThemeSelectorView.prototype.doIt = function() {
    return 7;
  };

  LocalThemeSelectorView.prototype.getElement = function() {
    console.log('ThemeSelector.getElement: entered');
    return this.selectorView;
  };

  LocalThemeSelectorView.prototype.getCurrentGlobalSyntaxTheme = function() {
    var activePackages, activeTheme, i, len, pkg;
    console.log('now in getCurrentGlobalSyntaxTheme');
    activePackages = atom.packages.getActivePackages();
    activeTheme = '';
    for (i = 0, len = activePackages.length; i < len; i++) {
      pkg = activePackages[i];
      if (pkg.metadata.theme === 'syntax') {
        activeTheme = pkg.metadata.name;
      }
    }
    return activeTheme;
  };

  return LocalThemeSelectorView;

})();

//# sourceMappingURL=local-theme-selector-view.js.map
